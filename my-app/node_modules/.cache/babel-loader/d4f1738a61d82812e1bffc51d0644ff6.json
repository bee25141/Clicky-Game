{"ast":null,"code":"var _jsxFileName = \"/Users/anthonybee/Documents/GitHub/Clicky-Game/my-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport Jumbotron from \"./components/Jumbotron/Jumbotron\";\nimport ImgCard from \"./components/ImgCard/ImgCard\";\nimport Beaches from \"./beaches.json\";\nimport \"./Style.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      beaches: Beaches,\n      score: 0,\n      topScore: 0\n    };\n\n    this.gameOver = () => {\n      if (this.state.score > this.state.topScore) {\n        this.setState({\n          topScore: this.state.score\n        });\n      }\n\n      this.state.beaches.forEach(card => {\n        card.count = 0;\n      });\n      this.setState({\n        score: 0\n      });\n    };\n\n    this.handleClick = id => {\n      let itemBeach = this.state.beaches.find(obj => obj.id === id);\n\n      if (itemBeach.count === 0) {\n        itemBeach.count = itemBeach.count + 1;\n        this.setState({\n          score: this.state.score + 1\n        });\n        this.state.beaches.sort(() => Math.random() - 0.5);\n      } else {\n        console.log(\"game over\");\n        this.gameOver();\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      score: this.state.score,\n      topScore: this.state.topScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(ImgCard, {\n      beaches: Beaches,\n      handleClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/anthonybee/Documents/GitHub/Clicky-Game/my-app/src/App.js"],"names":["React","Component","NavBar","Jumbotron","ImgCard","Beaches","App","state","beaches","score","topScore","gameOver","setState","forEach","card","count","handleClick","id","itemBeach","find","obj","sort","Math","random","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAO,aAAP;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACNC,MAAAA,OAAO,EAAEH,OADH;AAENI,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KADkB;;AAAA,SAQ1BC,QAR0B,GAQf,MAAM;AAEf,UAAI,KAAKJ,KAAL,CAAWE,KAAX,GAAmB,KAAKF,KAAL,CAAWG,QAAlC,EAA2C;AAEzC,aAAKE,QAAL,CAAc;AAACF,UAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWE;AAAtB,SAAd;AACD;;AACD,WAAKF,KAAL,CAAWC,OAAX,CAAmBK,OAAnB,CAA2BC,IAAI,IAAI;AACjCA,QAAAA,IAAI,CAACC,KAAL,GAAa,CAAb;AACD,OAFD;AAGA,WAAKH,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAE;AAAR,OAAd;AACD,KAlByB;;AAAA,SAqB1BO,WArB0B,GAqBZC,EAAE,IAAI;AAElB,UAAIC,SAAS,GAAG,KAAKX,KAAL,CAAWC,OAAX,CAAmBW,IAAnB,CAAwBC,GAAG,IAAIA,GAAG,CAACH,EAAJ,KAAWA,EAA1C,CAAhB;;AAEA,UAAIC,SAAS,CAACH,KAAV,KAAoB,CAAxB,EAA0B;AAExBG,QAAAA,SAAS,CAACH,KAAV,GAAkBG,SAAS,CAACH,KAAV,GAAkB,CAApC;AACA,aAAKH,QAAL,CAAc;AAACH,UAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAAX,GAAmB;AAA3B,SAAd;AACA,aAAKF,KAAL,CAAWC,OAAX,CAAmBa,IAAnB,CAAwB,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAA9C;AAED,OAND,MAMO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,aAAKd,QAAL;AACD;AACF,KAnCyB;AAAA;;AAsC1Be,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWE,KAA1B;AAAiC,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAKE,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAEL,OAAlB;AAA2B,MAAA,WAAW,EAAE,KAAKW,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAUD;;AAjDyB;;AAmD3B;AAED,eAAeV,GAAf","sourcesContent":["import React, {Component} from \"react\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport Jumbotron from \"./components/Jumbotron/Jumbotron\";\nimport ImgCard from \"./components/ImgCard/ImgCard\";\nimport Beaches from \"./beaches.json\";\nimport \"./Style.css\"\n\nclass App extends Component {\n  state = {\n    beaches: Beaches,\n    score: 0,\n    topScore: 0\n  };\n\n  // Function for resetting score, count and high score if applicable when game is over\n  gameOver = () => {\n\n    if (this.state.score > this.state.topScore){\n\n      this.setState({topScore: this.state.score});\n    }\n    this.state.beaches.forEach(card => {\n      card.count = 0;\n    });\n    this.setState({score: 0})\n  };\n\n  // This function handles the score and state when each card is clicked\n  handleClick = id => {\n\n    let itemBeach = this.state.beaches.find(obj => obj.id === id)\n\n    if (itemBeach.count === 0){\n\n      itemBeach.count = itemBeach.count + 1;\n      this.setState({score: this.state.score + 1});\n      this.state.beaches.sort(() => Math.random() - 0.5);\n\n    } else {\n      console.log(\"game over\")\n      this.gameOver();\n    }\n  };\n\n\n  render() {\n    return (\n      <div>\n        <NavBar score={this.state.score} topScore={this.state.topScore}/>\n\n        <Jumbotron />\n\n        <ImgCard beaches={Beaches} handleClick={this.handleClick}></ImgCard>\n\n      </div>\n    );\n  };\n\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}