{"version":3,"sources":["components/NavBar/NavBar.js","components/Jumbotron/Jumbotron.js","components/ImgCard/ImgCard.js","App.js","index.js"],"names":["NavBar","props","react_default","a","createElement","className","href","score","topScore","Jumbotron","ImgCard","beaches","map","beach","key","id","onClick","handleClick","alt","name","src","image","App","state","Beaches","gameOver","_this","setState","forEach","card","count","itemBeach","find","obj","sort","Math","random","console","log","NavBar_NavBar","this","Jumbotron_Jumbotron","ImgCard_ImgCard","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"smDA4BeA,MAzBf,SAAgBC,GACZ,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kDACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,KAAK,KAAjC,iBAMRJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,SAEMJ,EAAMM,MAFZ,mBAIMN,EAAMO,oBCNjBC,MAXf,WACI,OACAP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACfH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yDCcWM,MAnBf,SAAiBT,GAEb,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEXJ,EAAMU,QAAQC,IAAI,SAAAC,GAAK,OAEfX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOS,IAAKD,EAAME,GAAIC,QAAS,kBAAMf,EAAMgB,YAAYJ,EAAME,MACxEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKc,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,qBCgD9CC,oNApDbC,MAAQ,CACNZ,QAASa,EACTjB,MAAO,EACPC,SAAU,KAIZiB,SAAW,WAELC,EAAKH,MAAMhB,MAAQmB,EAAKH,MAAMf,UAEhCkB,EAAKC,SAAS,CAACnB,SAAUkB,EAAKH,MAAMhB,QAEtCmB,EAAKH,MAAMZ,QAAQiB,QAAQ,SAAAC,GACzBA,EAAKC,MAAQ,IAEfJ,EAAKC,SAAS,CAACpB,MAAO,OAIxBU,YAAc,SAAAF,GAEZ,IAAIgB,EAAYL,EAAKH,MAAMZ,QAAQqB,KAAK,SAAAC,GAAG,OAAIA,EAAIlB,KAAOA,IAElC,IAApBgB,EAAUD,OAEZC,EAAUD,MAAQC,EAAUD,MAAQ,EACpCJ,EAAKC,SAAS,CAACpB,MAAOmB,EAAKH,MAAMhB,MAAQ,IACzCmB,EAAKH,MAAMZ,QAAQuB,KAAK,kBAAMC,KAAKC,SAAW,OAG9CC,QAAQC,IAAI,aACZZ,EAAKD,qFAMP,OACEvB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmC,EAAD,CAAQhC,MAAOiC,KAAKjB,MAAMhB,MAAOC,SAAUgC,KAAKjB,MAAMf,WAEtDN,EAAAC,EAAAC,cAACqC,EAAD,MAEAvC,EAAAC,EAAAC,cAACsC,EAAD,CAAS/B,QAASa,EAASP,YAAauB,KAAKvB,sBA7CnC0B,cCFlBC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.66025364.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Style.css\";\n\nfunction NavBar(props){\n    return (\n        <div>\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <a className=\"navbar-brand\" href=\"/\">\n                            CLICKY GAME\n                        </a>\n                    </li>\n                </ul>\n                \n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"navbar-text\">\n                        Score:\n                         {props.score}    |\n                        Top Score: \n                         {props.topScore}\n                    </li>\n                </ul>\n            </nav>\n        </div>\n    );\n};\n\nexport default NavBar;","import React from \"react\";\nimport \"./Style.css\"\n\nfunction Jumbotron(){\n    return (\n    <div className=\"jumbotron text-center\">\n    <h1>Clicky Game</h1>\n    <br/>\n    <h5> Click on an image to get started! </h5>\n    \n  </div>\n    );\n};\n\nexport default Jumbotron;","import React from \"react\";\nimport \"./Style.css\"\n\nfunction ImgCard(props){\n    \n    return (\n        <div className=\"row\">\n        {\n            props.beaches.map(beach =>\n                (\n                    <div className=\"card\" key={beach.id} onClick={() => props.handleClick(beach.id)}>\n                        <div className=\"img-container\">\n                            <img alt={beach.name} src={beach.image} />\n                        </div>\n                    </div>\n                )\n            )\n        }\n    </div>\n    );\n};\n\nexport default ImgCard;","import React, {Component} from \"react\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport Jumbotron from \"./components/Jumbotron/Jumbotron\";\nimport ImgCard from \"./components/ImgCard/ImgCard\";\nimport Beaches from \"./beaches.json\";\nimport \"./Style.css\"\n\nclass App extends Component {\n  state = {\n    beaches: Beaches,\n    score: 0,\n    topScore: 0\n  };\n\n  // Function for resetting score, count and high score if applicable when game is over\n  gameOver = () => {\n\n    if (this.state.score > this.state.topScore){\n\n      this.setState({topScore: this.state.score});\n    }\n    this.state.beaches.forEach(card => {\n      card.count = 0;\n    });\n    this.setState({score: 0})\n  };\n\n  // This function handles the score and state when each card is clicked\n  handleClick = id => {\n\n    let itemBeach = this.state.beaches.find(obj => obj.id === id)\n\n    if (itemBeach.count === 0){\n\n      itemBeach.count = itemBeach.count + 1;\n      this.setState({score: this.state.score + 1});\n      this.state.beaches.sort(() => Math.random() - 0.5);\n\n    } else {\n      console.log(\"game over\")\n      this.gameOver();\n    }\n  };\n\n\n  render() {\n    return (\n      <div>\n        <NavBar score={this.state.score} topScore={this.state.topScore}/>\n\n        <Jumbotron />\n\n        <ImgCard beaches={Beaches} handleClick={this.handleClick}></ImgCard>\n\n      </div>\n    );\n  };\n\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}